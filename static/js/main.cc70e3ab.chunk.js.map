{"version":3,"sources":["components/FindInput/styles.module.css","redux/contacts/contacts-action.js","components/Form/index.jsx","components/ContactList/index.jsx","components/FindInput/index.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/styles.module.css","components/ContactList/styles.module.css"],"names":["module","exports","addContact","createAction","payload","id","name","number","deleteContact","filterChange","INITIAL_STATE","Form","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","items","some","elem","window","alert","reset","onAddContact","this","className","form","onSubmit","nameStyle","input","type","pattern","title","required","onChange","tel","button","Component","connect","contacts","dispatch","actions","uuidv4","filterContacts","normalizedfilter","filter","toLowerCase","includes","onDeleteContact","target","list","length","map","item","text","onClick","onFilterChange","filterstyle","App","createReducer","newArr","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cc70e3ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"styles_filterstyle__62peD\",\"title\":\"styles_title__26Ixl\"};","// import actionTypes from \"./contacts-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nconst addContact = createAction(\"form/Add_contact\", ({ id, name, number }) => ({\r\n  payload: { id, name, number },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contactList/Delete_contact\");\r\n\r\nconst filterChange = createAction(\"findInput/Filter_change\");\r\n\r\nexport default { addContact, deleteContact, filterChange };\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport actions from \"../../redux/contacts/contacts-action\";\r\nimport { form, nameStyle, input, tel, button } from \"./styles.module.css\";\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const name = this.state.name;\r\n    if (this.props.items.some((elem) => elem.name === name)) {\r\n      window.alert(`${name} is already in contacts`);\r\n      this.reset();\r\n      return;\r\n    }\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState(() => {\r\n      return { ...INITIAL_STATE };\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={nameStyle}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            // autocomplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={nameStyle}>\r\n          📞\r\n          <input\r\n            className={tel}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          Add to contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ contacts: { items } }) => {\r\n  return {\r\n    items,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: ({ name, number }) =>\r\n      dispatch(\r\n        actions.addContact({\r\n          id: uuidv4(),\r\n          name,\r\n          number,\r\n        })\r\n      ),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { connect } from \"react-redux\";\r\n\r\nimport actions from \"../../redux/contacts/contacts-action\";\r\n// import PropTypes from \"prop-types\";\r\nimport { list, item, text, button } from \"./styles.module.css\";\r\n\r\nfunction ContactList({ onDeleteContact, items }) {\r\n  return (\r\n    <ul className={list}>\r\n      {items.length > 0 &&\r\n        items.map(({ id, name, number }) => (\r\n          <li className={item} key={id}>\r\n            <span className={text}>{name}:</span>\r\n            <span className={text}>{number}</span>\r\n            <button\r\n              className={button}\r\n              id={id}\r\n              type=\"button\"\r\n              onClick={onDeleteContact}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst filterContacts = ({ items, filter }) => {\r\n  const normalizedfilter = filter.toLowerCase();\r\n  return items.filter(({ name }) => {\r\n    return name.toLowerCase().includes(normalizedfilter);\r\n  });\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  return {\r\n    items: filterContacts({ items, filter }),\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDeleteContact: (event) => dispatch(actions.deleteContact(event.target.id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { filterstyle, title } from \"./styles.module.css\";\r\n\r\nimport actions from \"../../redux/contacts/contacts-action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction FindInput({ onFilterChange, filter }) {\r\n  return (\r\n    <label className={title}>\r\n      Find contacts by name:\r\n      <input\r\n        className={filterstyle}\r\n        // autocomplete=\"off\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={onFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => {\r\n  return {\r\n    filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFilterChange: (event) =>\r\n      dispatch(actions.filterChange(event.currentTarget.value)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindInput);\r\n","import Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport FindInput from \"./components/FindInput\";\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"main_title\">Phonebook</h1>\n      <Form />\n      <h2 className=\"sub_title\">Contacts</h2>\n      <FindInput />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import actionTypes from \"../contacts/contacts-types\";\r\nimport actions from \"./contacts-action\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) => {\r\n    const newArr = state.filter((elem) => elem.id !== payload);\r\n    // console.log(\"action delete:\", newArr);\r\n    return [...newArr];\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filterChange]: (state, { payload }) => payload,\r\n});\r\n// const filterReducer = (state = \"\", { type, payload }) => {\r\n//   // console.log({ type, payload });\r\n//   switch (type) {\r\n//     case actionTypes.FILTER_CONTACT:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const contactsItemsReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD_CONTACT: {\r\n//       return [payload, ...state];\r\n//     }\r\n//     case actionTypes.DELETE_CONTACT: {\r\n//       const newArr = state.filter((elem) => elem.id !== payload);\r\n//       // console.log(\"action delete:\", newArr);\r\n//       return [...newArr];\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\n\r\n// console.log(\"getDefaultMiddleware \", getDefaultMiddleware());\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// import store from \"./redux/store\";\n// import { myAction, myAction2 } from \"./redux/actions\";\n\n// console.log(\"store is: \", store);\n// console.log(\"store dispatch action is: \", store.dispatch(myAction(5)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3CY9z\",\"nameStyle\":\"styles_nameStyle__1lqxv\",\"input\":\"styles_input__2pOC9\",\"tel\":\"styles_tel__2G-du\",\"button\":\"styles_button__10s9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__2eW4A\",\"item\":\"styles_item__1u8JU\",\"text\":\"styles_text__V6Ec1\",\"button\":\"styles_button__jHnZ7\"};"],"sourceRoot":""}